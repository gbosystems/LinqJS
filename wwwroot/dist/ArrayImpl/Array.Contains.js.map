{"version":3,"sources":["ArrayImpl/Array.Contains.ts"],"names":[],"mappings":";;AAGA,KAAK,CAAC,SAAS,CAAC,QAAQ,GAAG,kBAAkB,KAAU,EAAE,QAAiC;IAEzF,QAAQ,GAAG,QAAQ,IAAI;QACtB,MAAM,EAAE,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,IAAI,CAAC,EAAN,CAAM;QACxB,WAAW,EAAE,UAAC,CAAC,IAAK,OAAA,CAAC,EAAD,CAAC;KACrB,CAAA;IAED,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACtC,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC,IAAI,CAAC;QACb,CAAC;IACF,CAAC;IAED,MAAM,CAAC,KAAK,CAAC;AACd,CAAC,CAAC","file":"Array.Contains.js","sourcesContent":["import { IEqualityComparer } from \"../IEqualityComparer\";\r\n\r\n// Returns distinct elements from a sequence.\r\nArray.prototype.contains = function distinct(value: any, comparer?: IEqualityComparer<any>): boolean {\r\n\r\n\tcomparer = comparer || {\r\n\t\tequals: (x, y) => x == y,\r\n\t\tgetHashCode: (x) => 0\r\n\t}\r\n\r\n\tfor (var i = 0; i < this.length; i++) {\r\n\t\tif (comparer.equals(value, this[i])) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\r\n\treturn false;\r\n};\r\n"]}