{"version":3,"sources":["ArrayImpl/Array.Average.ts"],"names":[],"mappings":"AACA,KAAK,CAAC,SAAS,CAAC,OAAO,GAAG,UAAU,QAAiC;IACpE,QAAQ,GAAG,QAAQ,IAAI,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,EAAD,CAAC,CAAC,CAAC;IAElC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;QACvB,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAC;IACnD,CAAC;IAED,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACtC,KAAK,IAAI,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC;IAED,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;AAC5B,CAAC,CAAC","file":"Array.Average.js","sourcesContent":["// Computes the average of a sequence of values.\r\nArray.prototype.average = function (selector?: (value: any) => number): any {\r\n\tselector = selector || ((x) => x);\r\n\r\n\tif (this.length === 0) {\r\n\t\tthrow new Error(\"'source' contains no elements.\");\r\n\t}\r\n\t\r\n\tvar total = 0;\r\n\tfor (var i = 0; i < this.length; i++) {\r\n\t\ttotal += selector(this[i]);\r\n\t}\r\n\r\n\treturn total / this.length;\r\n};"]}