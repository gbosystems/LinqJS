{"version":3,"sources":["ArrayImpl/Array.Aggregate.ts"],"names":[],"mappings":"AAAA,KAAK,CAAC,SAAS,CAAC,SAAS,GAAG;IAE3B,IAAI,IAAI,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACtD,IAAI,IAAI,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACtD,IAAI,IAAI,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAEtD,IAAI,IAAI,GAAQ,IAAI,CAAC;IACrB,IAAI,IAAI,GAAyC,IAAI,CAAC;IACtD,IAAI,IAAI,GAA8B,IAAI,CAAC;IAE3C,EAAE,CAAC,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;QAC1B,IAAI,GAAG,IAAI,CAAC;QACZ,IAAI,GAAG,IAAI,CAAC;QACZ,IAAI,GAAG,IAAI,CAAC;IACb,CAAC;IAAC,IAAI,CAAC,CAAC;QACP,IAAI,GAAG,IAAI,CAAC;IACb,CAAC;IAED,IAAI,WAAgB,CAAC;IAErB,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;QACrC,IAAI,KAAK,CAAC;QAEV,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;YAClB,KAAK,GAAG,CAAC,CAAC;YACV,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACvB,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,KAAK,GAAG,CAAC,CAAC;YACV,WAAW,GAAG,IAAI,CAAC;QACpB,CAAC;QAED,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC1C,WAAW,GAAG,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAC1C,CAAC;IACF,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;QAC9B,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC;IAAC,IAAI,CAAC,CAAC;QACP,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAC;IAClD,CAAC;IAED,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;QAClB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1B,CAAC;IAAC,IAAI,CAAC,CAAC;QACP,MAAM,CAAC,WAAW,CAAC;IACpB,CAAC;AACF,CAAC,CAAC","file":"Array.Aggregate.js","sourcesContent":["Array.prototype.aggregate = function (): any {\r\n\r\n\tvar arg1 = arguments.length > 0 ? arguments[0] : null;\r\n\tvar arg2 = arguments.length > 1 ? arguments[1] : null;\r\n\tvar arg3 = arguments.length > 2 ? arguments[2] : null;\r\n\r\n\tvar seed: any = null;\r\n\tvar func: (accumulated: any, next: any) => any = null;\r\n\tvar selc: (accumulated: any) => any = null;\r\n\r\n\tif (arguments.length > 1) {\r\n\t\tseed = arg1;\r\n\t\tfunc = arg2;\r\n\t\tselc = arg3;\r\n\t} else {\r\n\t\tfunc = arg1;\r\n\t}\r\n\r\n\tvar accumulated: any;\r\n\r\n\tif (seed != null || this.length > 1) {\r\n\t\tvar start;\r\n\r\n\t\tif (seed == null) {\r\n\t\t\tstart = 1;\r\n\t\t\taccumulated = this[0];\r\n\t\t} else {\r\n\t\t\tstart = 0;\r\n\t\t\taccumulated = seed;\r\n\t\t}\r\n\r\n\t\tfor (var i = start; i < this.length; i++) {\r\n\t\t\taccumulated = func(accumulated, this[i]);\r\n\t\t}\r\n\t} else if (this.length === 1) {\r\n\t\taccumulated = this[0];\r\n\t} else {\r\n\t\tthrow new Error(\"Sequence contains no elements\");\r\n\t}\r\n\r\n\tif (selc != null) {\r\n\t\treturn selc(accumulated);\r\n\t} else {\r\n\t\treturn accumulated;\r\n\t}\r\n};"]}