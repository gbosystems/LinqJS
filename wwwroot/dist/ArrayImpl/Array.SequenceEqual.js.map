{"version":3,"sources":["ArrayImpl/Array.SequenceEqual.ts"],"names":[],"mappings":";;AAGA,KAAK,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,MAAkB,EAAE,QAAiC;IAC9F,MAAM,GAAG,MAAM,IAAI,EAAE,CAAC;IACtB,QAAQ,GAAG,QAAQ,IAAI;QACtB,MAAM,EAAE,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,IAAI,CAAC,EAAN,CAAM;QACxB,WAAW,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,EAAD,CAAC;KACnB,CAAC;IAEF,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;QACnC,MAAM,CAAC,KAAK,CAAC;IACd,CAAC;IAED,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QACtC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC1C,MAAM,CAAC,KAAK,CAAC;QACd,CAAC;IACF,CAAC;IAED,MAAM,CAAC,IAAI,CAAC;AACb,CAAC,CAAA","file":"Array.SequenceEqual.js","sourcesContent":["import { IEqualityComparer } from \"../IEqualityComparer\";\r\n\r\n// Determines whether two sequences are equal by comparing the elements.\r\nArray.prototype.sequenceEqual = function (second: Array<any>, comparer?: IEqualityComparer<any>) : boolean {\r\n\tsecond = second || [];\r\n\tcomparer = comparer || {\r\n\t\tequals: (x, y) => x == y,\r\n\t\tgetHashCode: x => 0\r\n\t};\r\n\r\n\tif (this.length !== second.length) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tfor (var i = 0; i < this.length; i++) {\r\n\t\tif (!comparer.equals(this[i], second[i])) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n"]}