{"version":3,"sources":["ArrayImpl/Array.Intersect.ts"],"names":[],"mappings":"AAEA,KAAK,CAAC,SAAS,CAAC,SAAS,GAAG;IAC3B,IAAI,MAAM,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACtD,IAAI,QAAQ,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC;QAClC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;QACd,CAAC,CAAC;YACD,MAAM,EAAE,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,IAAI,CAAC,EAAN,CAAM;SACxB,CAAC;IAEH,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,IAAI,CAAC,GAAG,CAAC,CAAC;IAEV,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;QAExB,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,KAAK,GAAG,KAAK,CAAC;QAClB,OAAO,CAAC,GAAG,MAAM,CAAC,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC;YACpC,EAAE,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzC,KAAK,GAAG,IAAI,CAAC;YACd,CAAC;YACD,CAAC,EAAE,CAAC;QACL,CAAC;QAED,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACX,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACtB,CAAC;QACD,CAAC,EAAE,CAAC;IACL,CAAC;IAED,MAAM,CAAC,MAAM,CAAC;AACf,CAAC,CAAA","file":"Array.Intersect.js","sourcesContent":["\r\n// Produces the set intersection of two sequences by using the default equality comparer to compare values.\r\nArray.prototype.intersect = function() {\r\n\tvar second = arguments.length > 0 ? arguments[0] : [];\r\n\tvar comparer = arguments.length > 1\r\n\t\t? arguments[1]\r\n\t\t: {\r\n\t\t\tequals: (x, y) => x == y\r\n\t\t};\r\n\r\n\tvar result = [];\r\n\tvar i = 0;\r\n\r\n\twhile (i < this.length) {\r\n\r\n\t\tvar j = 0;\r\n\t\tvar found = false;\r\n\t\twhile (j < second.length && !found) {\r\n\t\t\tif (comparer.equals(this[i], second[j])) {\r\n\t\t\t\tfound = true;\r\n\t\t\t}\r\n\t\t\tj++;\r\n\t\t}\r\n\r\n\t\tif (found) {\r\n\t\t\tresult.push(this[i]);\r\n\t\t}\r\n\t\ti++;\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n"]}