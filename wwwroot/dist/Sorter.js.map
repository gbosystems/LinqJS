{"version":3,"sources":["Sorter.ts"],"names":[],"mappings":";;;;;;;;;;;;AAEA;IAKC,gBAAY,WAA8B,EAAE,QAA0B;QACrE,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QAChC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;IAC3B,CAAC;IAEM,qBAAI,GAAX,UAAY,CAAI,EAAE,CAAI;QAErB,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QAChC,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QAChC,IAAI,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;QAC1B,IAAI,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;QAE1B,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC3C,CAAC;QAED,EAAE,CAAC,CAAC,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC9C,MAAM,CAAO,IAAK,CAAC,aAAa,CAAM,IAAI,CAAC,CAAC;QAC7C,CAAC;QAED,EAAE,CAAC,CAAC,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;YAC9C,MAAM,CAAM,IAAI,GAAQ,IAAI,CAAC;QAC9B,CAAC;QAED,EAAE,CAAC,CAAC,KAAK,KAAK,WAAW,IAAI,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC;YACpD,MAAM,CAAC,CAAC,CAAC;QACV,CAAC;QAED,EAAE,CAAC,CAAC,KAAK,KAAK,WAAW,IAAI,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC;YACpD,MAAM,CAAC,CAAC,CAAC,CAAC;QACX,CAAC;QAED,EAAE,CAAC,CAAC,KAAK,KAAK,WAAW,IAAI,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC;YACpD,MAAM,CAAC,CAAC,CAAC;QACV,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;IACvD,CAAC;IAEF,aAAC;AAAD,CA5CA,AA4CC,IAAA;AA5CY,wBAAM;AA8CnB;IAA8C,mCAAe;IAA7D;;IACA,CAAC;IAAD,sBAAC;AAAD,CADA,AACC,CAD6C,MAAM,GACnD;AADY,0CAAe;AAG5B;IAA+C,oCAAe;IAA9D;;IAIA,CAAC;IAHO,+BAAI,GAAX,UAAY,CAAI,EAAE,CAAI;QACrB,MAAM,CAAC,iBAAM,IAAI,YAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9B,CAAC;IACF,uBAAC;AAAD,CAJA,AAIC,CAJ8C,MAAM,GAIpD;AAJY,4CAAgB","file":"Sorter.js","sourcesContent":["import { IComparer } from \"./IComparer\";\r\n\r\nexport class Sorter<T, TKey> {\r\n\r\n\tprivate _keySelector: (item: T) => TKey;\r\n\tprivate _comparer?: IComparer<TKey>;\r\n\r\n\tconstructor(keySelector: (item: T) => TKey, comparer?: IComparer<TKey>) {\r\n\t\tthis._keySelector = keySelector;\r\n\t\tthis._comparer = comparer;\r\n\t}\r\n\r\n\tpublic sort(a: T, b: T): number {\r\n\r\n\t\tvar aKey = this._keySelector(a);\r\n\t\tvar bKey = this._keySelector(b);\r\n\t\tvar aType = typeof (aKey);\r\n\t\tvar bType = typeof (bKey);\r\n\r\n\t\tif (this._comparer != null) {\r\n\t\t\treturn this._comparer.compare(aKey, bKey);\r\n\t\t}\r\n\r\n\t\tif (aType === \"string\" && bType === \"string\") {\r\n\t\t\treturn (<any>aKey).localeCompare(<any>bKey);\r\n\t\t}\r\n\r\n\t\tif (aType === \"number\" && bType === \"number\") {\r\n\t\t\treturn <any>aKey - <any>bKey;\r\n\t\t}\r\n\r\n\t\tif (aType === \"undefined\" && bType === \"undefined\") {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tif (aType === \"undefined\" && bType !== \"undefined\") {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\r\n\t\tif (aType !== \"undefined\" && bType === \"undefined\") {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\r\n\t\treturn aKey.toString().localeCompare(bKey.toString());\r\n\t}\r\n\r\n}\r\n\r\nexport class AscendingSorter<T, TKey> extends Sorter<T, TKey> {\r\n}\r\n\r\nexport class DescendingSorter<T, TKey> extends Sorter<T, TKey> {\r\n\tpublic sort(a: T, b: T): number {\r\n\t\treturn super.sort(a, b) * -1;\r\n\t}\r\n}\r\n"]}